
&НаКлиенте
Процедура ИзменитьТипДействия()
	
	Если ЭтоСимпл(Объект.Type) Тогда
		ТипДействия = 1;
	ИначеЕсли ЭтоТемплейт(Объект.Type) Тогда
		ТипДействия = 2;
	ИначеЕсли ЭтоКью(Объект.Type) Тогда
		ТипДействия = 3;
	КонецЕсли;
	
	Элементы.ГруппаSName.Видимость = ТипДействия = 1;
	Элементы.ГруппаParams.Видимость = ТипДействия = 1 Или ТипДействия = 2;
	Элементы.ГруппаQueue.Видимость = ТипДействия = 3 Или ТипДействия = 2;
	
КонецПроцедуры

&НаСервере
Функция ЭтоСимпл(Тип)
	Возврат Тип = Справочники.EXCActionsType.Simple;	
КонецФункции

&НаСервере
Функция ЭтоТемплейт(Тип)
	Возврат Тип = Справочники.EXCActionsType.Template;
КонецФункции

&НаСервере
Функция ЭтоКью(Тип)
	Возврат Тип = Справочники.EXCActionsType.Queue;	
КонецФункции

&НаКлиенте
Процедура TypeПриИзменении(Элемент)
	ИзменитьТипДействия();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИзменитьТипДействия();
КонецПроцедуры

&НаКлиенте
Процедура ActionQueueПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.ID = Строка(Новый УникальныйИдентификатор());
		ТекущийИД = Элемент.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ActionQueueActionПриИзменении(Элемент)
	
	Если Элемент.Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Родитель.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//Элемент.Родитель.ТекущиеДанные
	ОбновитьПараметрыДействия(Элемент.Родитель.ТекущиеДанные.Action, Элемент.Родитель.ТекущиеДанные.ID);
	
КонецПроцедуры

&НаКлиенте
Функция ОбновитьПараметрыДействия(Действие, ID)
	
	ТПараметры = ПолучитьПараметрыПоДействию(Действие);
	
	Структура = Новый Структура;
	
	Для Каждого Параметр Из ТПараметры Цикл
		Структура.Вставить(Параметр, Неопределено);
	КонецЦикла;
	
	ТекущиеСтроки = Объект.ActionsParams.НайтиСтроки(Новый Структура("ID", ID));
	
	Для Каждого Строка Из ТекущиеСтроки Цикл
		Если Структура.Свойство(Строка.Param) Тогда
			Структура[Строка.Param] = Строка.Value;
		КонецЕсли;
		Объект.ActionsParams.Удалить(Строка);
	КонецЦикла;
	
	Для Каждого Параметр Из Структура Цикл
		НоваяСтрока = Объект.ActionsParams.Добавить();
		НоваяСтрока.ID = ID;
		НоваяСтрока.Param = Параметр.Ключ;
		НоваяСтрока.Value = Параметр.Значение;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыПоДействию(Действие)
	Возврат Действие.Params.ВыгрузитьКолонку("Param");
КонецФункции

&НаКлиенте
Процедура ActionQueueПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ТекущийИД = "";
	Иначе
		ТекущийИД = Элемент.ТекущиеДанные.ID;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ActionQueueПослеУдаления(Элемент)
	
	Если Не Объект.ActionQueue.НайтиСтроки(Новый Структура("ID", УдаляемыйИД)).Количество() Тогда
		
		ТекущиеСтроки = Объект.ActionsParams.НайтиСтроки(Новый Структура("ID", УдаляемыйИД));
		
		Для Каждого Строка Из ТекущиеСтроки Цикл
			Объект.ActionsParams.Удалить(Строка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ActionQueueПередУдалением(Элемент, Отказ)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		УдаляемыйИД = "";
	Иначе
		УдаляемыйИД = Элемент.ТекущиеДанные.ID;
	КонецЕсли;
КонецПроцедуры
